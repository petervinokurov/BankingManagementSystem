{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/http-api.service.ts","./src/app/login/LoginDto.ts","./src/app/login/LoginRoutes.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.service.ts","./src/app/user-managment/new-user/new-user.component.ts","./src/app/user-managment/new-user/new-user.component.html","./src/app/user-managment/new-user/newUserDto.ts","./src/app/user-managment/user-managment-routing.module.ts","./src/app/user-managment/user-managment.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UserManagmentModule } from './user-managment/user-managment.module';\n\nconst routes: Routes = [\n  {path: \"\", component: LoginComponent},\n  {path: \"user-managment\",\n    loadChildren: () => import(\"./user-managment/user-managment.module\").then((m) => m.UserManagmentModule)}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'BankingManagmentSystem.Angular';\n}\n","<nav class=\"navbar navbar-expand-lg bg-light\">\n  <div class=\"container-fluid\">\n    <a><img src=\"../assets/logo.png\" style=\"width: 65px;\"></a>\n    <a class=\"navbar-brand\">Managment system</a>\n\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  </div>\n</nav>\n<div class=\"row\">\n  <router-outlet></router-outlet>\n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { LoginService } from './login/login.service';\nimport {APP_BASE_HREF} from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpApiService } from './http-api.service';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { UserManagmentModule } from './user-managment/user-managment.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    UserManagmentModule,\n    NgbModule\n  ],\n  providers: [{provide: APP_BASE_HREF, useValue: '/ClientApp'}, LoginService, HttpApiService, HttpClient],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable()\nexport class HttpApiService {\n    constructor(private readonly http: HttpClient) { }\n\n    public get<T>(\n        url: string,\n        data?: any,\n        cancellationSubject?: Observable<void>\n    ): Observable<T> {\n        let request = this.http.get<T>(\n            this.combineCompleteUrl(url, data)\n        );\n\n        if (cancellationSubject) {\n            request = this.applyCancellationSubject(\n                request,\n                cancellationSubject\n            );\n        }\n\n        return request;\n    }\n\n    public post<T>(\n        url: string,\n        data?: object,\n        cancellationSubject?: Observable<void>\n    ): Observable<T> {\n        let request = this.http.post<T>(this.combineCompleteUrl(url), data);\n\n        console.log(this.combineCompleteUrl(url));\n        console.log(data);\n        if (cancellationSubject) {\n\n            //request = this.applyCancellationSubject(\n            //    request,\n            //    cancellationSubject\n            //);\n        }\n\n        return request;\n    }\n\n    public put<T>(\n        url: string,\n        data: object,\n        cancellationSubject?: Observable<void>\n    ): Observable<T> {\n        let request = this.http.put<T>(this.combineCompleteUrl(url), data);\n\n        if (cancellationSubject) {\n            request = this.applyCancellationSubject(\n                request,\n                cancellationSubject\n            );\n        }\n\n        return request;\n    }\n\n    public delete<T>(\n        url: string,\n        data: any,\n        cancellationSubject?: Observable<void>\n    ): Observable<T> {\n        let request = this.http.delete<T>(\n            this.combineCompleteUrl(url, data)\n        );\n\n        if (cancellationSubject) {\n            request = this.applyCancellationSubject(\n                request,\n                cancellationSubject\n            );\n        }\n\n        return request;\n    }\n\n    private combineCompleteUrl(\n      url: string,\n      data: any = null\n    ): string {\n      let requestData = \"\";\n\n      if (data) {\n        if (typeof data === \"object\") {\n          requestData = `?request=${encodeURIComponent(\n            JSON.stringify(data)\n          )}`;\n        } else {\n          requestData = `/${data as string}`;\n        }\n      }\n\n      return `${environment.apiUrl}/${url}${requestData}`;\n    }\n\n    private applyCancellationSubject<T>(\n      request: Observable<T>,\n      cancellationSubject: Observable<void>\n    ): Observable<T> {\n      return request.pipe(takeUntil(cancellationSubject));\n    }\n}\n","export class LoginDto{\n  public Username: string = \"email@email.com\";\n  public Password: string = \"somehashhere\";\n}\n","export enum LoginApiRoutes {\n\tRoot = \"identity\",\n\tLogin = \"login\"\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginDto } from './LoginDto';\nimport { LoginService } from './login.service';\nimport { lastValueFrom, Observable , Subscriber} from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n\n\tprotected cancellationObservable: Observable<void> = new Observable();\n\n  public model:LoginDto = new LoginDto();\n\n  constructor(private readonly service:LoginService,\n    private readonly http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  public onLogin(){\n     lastValueFrom(this.service.login(this.model, this.cancellationObservable));\n  }\n}\n","<div>\n<div class=\"row justify-content-md-center\">\n    <label for=\"userName\" class=\"col-sm-1 col-form-label\">Username</label>\n    <div class=\"col-sm-2\">\n      <input type=\"text\" class=\"form-control\" name=\"userName\" id=\"userName\" placeholder=\"User name\" [(ngModel)]=\"model.Username\" required>\n    </div>\n</div>\n<div class=\"row justify-content-md-center\">\n  <label for=\"password\"  class=\"col-sm-1 col-form-label\">Password</label>\n  <div class=\"col-sm-2\">\n    <input type=\"text\" class=\"form-control\"\n    id=\"password\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"model.Password\" required>\n  </div>\n</div>\n<div class=\"col-auto\">\n  <button type=\"submit\" class=\"btn btn-primary mb-3\" name=\"Login\" (click)=\"onLogin()\" >Login</button>\n</div>\n</div>\n\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { HttpApiService } from \"../http-api.service\";\nimport { LoginDto } from \"./LoginDto\";\nimport { LoginApiRoutes } from \"./LoginRoutes\";\n\n\n@Injectable()\nexport class LoginService {\n\tconstructor(public httpService: HttpApiService) {\n\t}\n\n\tpublic login(\n\t\trequest: LoginDto,\n\t\tcancellationSubject: Observable<void>\n\t): Observable<LoginDto> {\n\t\treturn this.httpService.post<LoginDto>(\n\t\t\t`${LoginApiRoutes.Root}/${LoginApiRoutes.Login}`,\n\t\t\trequest,\n\t\t\tcancellationSubject\n\t\t);\n\t}\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NewUserDto } from './newUserDto';\nimport { DxFormComponent } from 'devextreme-angular';\n\n@Component({\n  selector: 'app-new-user',\n  templateUrl: './new-user.component.html',\n  styleUrls: ['./new-user.component.scss']\n})\nexport class NewUserComponent implements OnInit {\n\n  public newUser: NewUserDto = new NewUserDto();\n\n  registerButtonOptions: any = {\n    text: 'Register',\n    type: 'primary',\n    useSubmitBehavior: true,\n  };\n  passwordComparison = () => this.newUser.password;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"long-title\">\n  <h3>Create a new User</h3>\n</div>\n<div id=\"new-user-form\" class=\"row d-flex justify-content-center\">\n  <div class=\"col-md-3\">\n        <div class=\"form-container\">\n          <dx-form id=\"form\" [colCount]=\"1\" [formData]=\"newUser\">\n            <dxi-item dataField=\"userName\">\n              <dxi-validation-rule type=\"required\" message=\"Username is required.\"></dxi-validation-rule>\n              <dxi-validation-rule\n                type=\"email\"\n                message=\"Email pattern doesn't match.\"></dxi-validation-rule>\n            </dxi-item>\n            <dxi-item dataField=\"password\">\n              <dxi-validation-rule type=\"required\" message=\"Password is required\">\n              </dxi-validation-rule>\n\n            </dxi-item>\n            <dxi-item dataField=\"confirmPassword\">\n              <dxi-validation-rule type=\"required\" message=\"Confirm Password is required\">\n              </dxi-validation-rule>\n              <dxi-validation-rule type=\"compare\" [comparisonTarget]=\"passwordComparison\" message=\"Don't compare\"></dxi-validation-rule>\n            </dxi-item>\n            <dxi-item\n              itemType=\"button\"\n              horizontalAlignment=\"center\"\n              [buttonOptions]=\"registerButtonOptions\">\n\n            </dxi-item>\n          </dx-form>\n    </div>\n  </div>\n</div>\n","export class NewUserDto{\n  public userName:string = \"\";\n  public password:string = \"\";\n  public confirmPassword: string = \"\";\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NewUserComponent } from './new-user/new-user.component';\n\nconst routes: Routes = [{path: \"new-user\", component: NewUserComponent}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserManagmentRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserManagmentRoutingModule } from './user-managment-routing.module';\nimport { NewUserComponent } from './new-user/new-user.component';\nimport { DxFormModule, DxButtonModule} from 'devextreme-angular';\n\n@NgModule({\n  declarations: [\n    NewUserComponent\n  ],\n  imports: [\n    CommonModule,\n    UserManagmentRoutingModule,\n    DxFormModule,\n    DxButtonModule\n  ]\n})\nexport class UserManagmentModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\tapiUrl: \"https://localhost:5001/api\",\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}