{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-events.ts","./src/app/app-routes.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common-services/http-api.service.ts","./src/app/common-services/http-error-interceptor.ts","./src/app/login/identity-api-routes.ts","./src/app/login/identity.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/loginDto.ts","./src/app/user-managment/new-user/new-user.component.ts","./src/app/user-managment/new-user/new-user.component.html","./src/app/user-managment/new-user/newUserDto.ts","./src/app/user-managment/roles/roles.component.ts","./src/app/user-managment/roles/roles.component.html","./src/app/user-managment/user-list/user-list.component.ts","./src/app/user-managment/user-list/user-list.component.html","./src/app/user-managment/user-managment-api-routes.ts","./src/app/user-managment/user-managment-routes.ts","./src/app/user-managment/user-managment-routing.module.ts","./src/app/user-managment/user-managment.module.ts","./src/app/user-managment/user-managment.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Injectable, Output, EventEmitter } from \"@angular/core\";\n\n@Injectable()\nexport class AppEvents {\n    @Output() LoginEmitter: EventEmitter<void> = new EventEmitter();\n    @Output() LogoutEmitter: EventEmitter<void> = new EventEmitter();\n\n    constructor() {}\n}\n","export enum AppRoutes {\n  Root = \"\",\n  Transactions = \"transactions\",\n  UserAccount = \"user-account\",\n  Products = \"products\",\n  CustomerRelationships = \"customer-relationships\"\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UserManagmentModule } from './user-managment/user-managment.module';\n\nconst routes: Routes = [\n  {path: \"\", component: LoginComponent},\n  {path: \"user-managment\",\n    loadChildren: () => import(\"./user-managment/user-managment.module\").then((m) => m.UserManagmentModule)}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { lastValueFrom, Observable } from 'rxjs';\nimport { AppEvents } from './app-events';\nimport { IdentityService } from './login/identity.service';\nimport { AppRoutes } from './app-routes';\nimport { CookieService } from 'ngx-cookie-service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  protected cancellationObservable: Observable<void> = new Observable();\n\n  public isUserLogin:boolean = false;\n  constructor(private readonly service:IdentityService,\n    private readonly events:AppEvents,\n    private readonly router:Router,\n    private readonly cookie:CookieService,\n    private jwtHelper: JwtHelperService\n  ){}\n\n  public ngOnInit(){\n    this.events.LoginEmitter.subscribe(x => this.isUserLogin = true);\n    this.events.LogoutEmitter.subscribe(x => {\n      this.cookie.delete('Token');\n      this.isUserLogin = false\n    });\n    if (this.cookie.get('Token') && !this.jwtHelper.isTokenExpired(this.cookie.get('Token'))){\n      this.isUserLogin = true;\n    }\n  }\n\n  public async onLogOut(){\n    await lastValueFrom(this.service.logout());\n    this.isUserLogin = false;\n    this.router.navigate([AppRoutes.Root]);\n  }\n}\n","\n\n<div class=\"d-flex flex-row h-100\">\n  <div id=\"outer0\" class=\"d-flex flex-column flex-grow-1\">\n      <div id=\"one\" class=\"d-flex flex-row justify-content-md-between bg-light\">\n        <nav class=\"navbar navbar-expand-lg\">\n          <div class=\"container-fluid\">\n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n              <ul class=\"navbar-nav\">\n                <li class=\"nav-item\">\n                  <a><img src=\"../assets/logo.png\" style=\"width: 45px;\"></a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link active\">Management system</a>\n                </li>\n              </ul>\n\n            </div>\n          </div>\n\n        </nav>\n        <div class=\"\">\n          <button type=\"button\" class=\"btn btn-link mb-3\" *ngIf=\"isUserLogin\" (click)=\"onLogOut()\">Log out</button>\n        </div>\n\n      </div>\n      <div id=\"two\" class=\"d-flex flex-row h-100\" >\n        <div >\n          <dx-menu orientation=\"vertical\" class=\"d-flex\" *ngIf=\"isUserLogin\">\n            <dxi-item text=\"User Managment\">\n                <dxi-item>\n                  <a href=\"user-managment/user-list\">Users</a>\n                </dxi-item>\n                <dxi-item>\n                  <a href=\"user-managment/roles\">Roles</a>\n                </dxi-item>\n                <dxi-item>\n                  <a href=\"user-managment/claims\">Claims</a>\n                </dxi-item>\n            </dxi-item>\n        </dx-menu>\n        </div>\n        <div class=\"d-flex flex-column flex-grow-1 bg-info\">\n          <router-outlet></router-outlet>\n        </div>\n      </div>\n      <div id=\"three\" class=\"\">\n          Banking Managment System 2022 &copy;\n      </div>\n  </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { IdentityService } from './login/identity.service';\nimport { FormsModule } from '@angular/forms';\nimport { HttpApiService } from './common-services/http-api.service';\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserManagmentModule } from './user-managment/user-managment.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpErrorInterceptor } from './common-services/http-error-interceptor';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AppEvents } from './app-events';\nimport { CookieService } from 'ngx-cookie-service';\nimport { DxMenuModule, DxDataGridModule, DxTemplateModule} from \"devextreme-angular\";\nimport DataSource from 'devextreme/data/data_source';\nimport { JwtHelperService, JWT_OPTIONS} from '@auth0/angular-jwt';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    DxMenuModule,\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    UserManagmentModule,\n    NgbModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS,\n      useClass: HttpErrorInterceptor,\n      multi: true },\n    { provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\n    IdentityService,\n    HttpApiService,\n    HttpClient,\n    AppEvents,\n    CookieService,\n    JwtHelperService,\n    DataSource\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable()\nexport class HttpApiService {\n    constructor(private readonly http: HttpClient) { }\n\n    public get<T>(\n        url: string,\n        data?: any,\n        cancellationSubject?: Observable<void>\n    ): Observable<T> {\n        let request = this.http.get<T>(\n            this.combineCompleteUrl(url, data)\n        );\n\n        if (cancellationSubject) {\n            //request = this.applyCancellationSubject(\n            //    request,\n            //    cancellationSubject\n            //);\n        }\n\n        return request;\n    }\n\n    public post<T>(\n        url: string,\n        data?: object,\n        cancellationSubject?: Observable<void>\n    ): Observable<T> {\n        let request = this.http.post<T>(this.combineCompleteUrl(url), data);\n        if (cancellationSubject) {\n\n            //request = this.applyCancellationSubject(\n            //    request,\n            //    cancellationSubject\n            //);\n        }\n\n        return request;\n    }\n\n    public put<T>(\n        url: string,\n        data: object,\n        cancellationSubject?: Observable<void>\n    ): Observable<T> {\n        let request = this.http.put<T>(this.combineCompleteUrl(url), data);\n\n        if (cancellationSubject) {\n            request = this.applyCancellationSubject(\n                request,\n                cancellationSubject\n            );\n        }\n\n        return request;\n    }\n\n    public delete<T>(\n        url: string,\n        data: any,\n        cancellationSubject?: Observable<void>\n    ): Observable<T> {\n        let request = this.http.delete<T>(\n            this.combineCompleteUrl(url, data)\n        );\n\n        if (cancellationSubject) {\n            request = this.applyCancellationSubject(\n                request,\n                cancellationSubject\n            );\n        }\n\n        return request;\n    }\n\n    private combineCompleteUrl(\n      url: string,\n      data: any = null\n    ): string {\n      let requestData = \"\";\n\n      if (data) {\n        if (typeof data === \"object\") {\n          requestData = `?request=${encodeURIComponent(\n            JSON.stringify(data)\n          )}`;\n        } else {\n          requestData = `/${data as string}`;\n        }\n      }\n\n      return `${environment.apiUrl}/${url}${requestData}`;\n    }\n\n    private applyCancellationSubject<T>(\n      request: Observable<T>,\n      cancellationSubject: Observable<void>\n    ): Observable<T> {\n      return request.pipe(takeUntil(cancellationSubject));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpRequest, HttpHandler, HttpInterceptor, HttpResponse, HttpStatusCode, HttpErrorResponse} from '@angular/common/http';\nimport { catchError, map, Observable, tap, throwError } from 'rxjs';\nimport { HttpEvent } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\nimport { BmsResponse } from './models/BmsResponse';\nimport { Router } from '@angular/router';\nimport { AppRoutes } from '../app-routes';\nimport { AppEvents } from '../app-events';\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n\n  constructor(private readonly toastService:ToastrService,\n    private readonly router:Router,\n    private readonly events:AppEvents) { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n\n\n    return next.handle(request).pipe(\n      map((event) => {\n        if (event instanceof HttpResponse) {\n          let applicationError = event.body?.applicationError;\n          if (applicationError){\n            this.toastService.warning(applicationError);\n            event = event.clone({body: null});\n          }\n        }\n        return event;\n      }),\n      catchError((err) => {\n        if (err instanceof HttpErrorResponse){\n          if (err.status == HttpStatusCode.Unauthorized){\n            this.events.LogoutEmitter.emit();\n            this.router.navigate([AppRoutes.Root]);\n          } else {\n            this.toastService.error(err.error.applicationError);\n          }\n        }\n        return new Observable<HttpEvent<unknown>>();\n      })\n    )\n  }\n}\n","export enum IdentityApiRoutes {\n\tRoot = \"identity\",\n\tLogin = \"login\",\n  Logout = \"logout\"\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { HttpApiService } from \"../common-services/http-api.service\";\nimport { LoginDto } from \"./loginDto\";\nimport { IdentityApiRoutes } from \"./identity-api-routes\";\n\n@Injectable()\nexport class IdentityService {\n\tconstructor(public httpService: HttpApiService) {\n\t}\n\n\tpublic login(\n\t\trequest: LoginDto,\n\t\tcancellationSubject: Observable<void>\n\t): Observable<LoginDto> {\n\t\treturn this.httpService.post<LoginDto>(\n\t\t\t`${IdentityApiRoutes.Root}/${IdentityApiRoutes.Login}`,\n\t\t\trequest,\n\t\t\tcancellationSubject\n\t\t);\n\t}\n\n  public logout(\n  ):Observable<void> {\n    return this.httpService.get<void>(`${IdentityApiRoutes.Root}/${IdentityApiRoutes.Logout}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginDto } from './loginDto';\nimport { IdentityService } from './identity.service';\nimport { lastValueFrom, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { UserManagmentRoutes } from '../user-managment/user-managment-routes';\nimport { AppEvents } from '../app-events';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\tprotected cancellationObservable: Observable<void> = new Observable();\n  public model:LoginDto = new LoginDto();\n\n  constructor(private readonly service:IdentityService,\n    private readonly events: AppEvents,\n    private readonly router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  public async onLogin(){\n     var result = await lastValueFrom(this.service.login(this.model, this.cancellationObservable));\n     if (result){\n      this.router.navigate([UserManagmentRoutes.Root,UserManagmentRoutes.UserList]);\n      this.events.LoginEmitter.emit();\n     }\n  }\n}\n","<div class=\"container text-center\" style=\"margin-top: 25px;\">\n  <div class=\"row justify-content-md-center\">\n  <div class=\"col-md-auto\">\n    <div class=\"card\">\n      <div class=\"row justify-content-md-center\" style=\"margin: 5px;\">\n        <a><img src=\"../../assets/logo.png\" style=\"width: 75px;\"></a>\n      </div>\n    <div class=\"row justify-content-md-center\" style=\"margin: 5px;\">\n      <label for=\"userName\" class=\"col-auto col-form-label\">Username</label>\n      <div class=\"col-auto\">\n        <input type=\"text\" class=\"form-control\" name=\"userName\" id=\"userName\" placeholder=\"User name\" [(ngModel)]=\"model.Username\" required>\n      </div>\n    </div>\n    <div class=\"row justify-content-md-center\" style=\"margin: 5px;\">\n      <label for=\"password\"  class=\"col-auto col-form-label\">Password</label>\n      <div class=\"col-auto\">\n        <input type=\"password\" class=\"form-control\"\n        id=\"password\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"model.Password\" required>\n      </div>\n    </div>\n    <div class=\"col-auto\" style=\"margin: 5px;\">\n      <button type=\"submit\" class=\"btn btn-primary mb-3\" name=\"Login\" (click)=\"onLogin()\">Login</button>\n    </div>\n    <div class=\"col-auto\">\n      <a routerLink=\"/user-managment/new-user\">Create a new user</a>\n    </div>\n</div>\n\n</div>\n\n","export class LoginDto{\n  public Username: string = \"admin@irocbank.com\";\n  public Password: string = \"admin\";\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NewUserDto } from './newUserDto';\nimport { UserManagmentService } from '../user-managment.service';\nimport { lastValueFrom, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AppRoutes } from 'src/app/app-routes';\n\n@Component({\n  selector: 'app-new-user',\n  templateUrl: './new-user.component.html',\n  styleUrls: ['./new-user.component.scss']\n})\nexport class NewUserComponent implements OnInit {\n\n  public newUser: NewUserDto = new NewUserDto();\n  protected cancellationObservable: Observable<void> = new Observable();\n\n  registerButtonOptions: any = {\n    text: 'Register',\n    type: 'primary',\n    useSubmitBehavior: true,\n    //onclick: this.createNewUser()\n  };\n  passwordComparison = () => this.newUser.password;\n  constructor(private readonly service:UserManagmentService,\n    private readonly router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  public async createNewUser(){\n    var result = lastValueFrom(this.service.createNewUser(this.newUser, this.cancellationObservable));\n    var b = await result;\n    if (b){\n      this.router.navigate([AppRoutes.Root]);\n    }\n\n  }\n\n}\n","<div class=\"long-title\">\n  <h3>Create a new User</h3>\n</div>\n<div id=\"new-user-form\" class=\"row d-flex justify-content-center\">\n  <div class=\"col-md-3\">\n        <div class=\"form-container\">\n          <dx-form id=\"form\" [colCount]=\"1\" [formData]=\"newUser\">\n            <dxi-item dataField=\"userName\">\n              <dxi-validation-rule type=\"required\" message=\"Username is required.\"></dxi-validation-rule>\n              <dxi-validation-rule\n                type=\"email\"\n                message=\"Email pattern doesn't match.\"></dxi-validation-rule>\n            </dxi-item>\n            <dxi-item dataField=\"password\">\n              <dxi-validation-rule type=\"required\" message=\"Password is required\">\n              </dxi-validation-rule>\n\n            </dxi-item>\n            <dxi-item dataField=\"confirmPassword\">\n              <dxi-validation-rule type=\"required\" message=\"Confirm Password is required\">\n              </dxi-validation-rule>\n              <dxi-validation-rule type=\"compare\" [comparisonTarget]=\"passwordComparison\" message=\"Don't compare\"></dxi-validation-rule>\n            </dxi-item>\n            <!--<dxi-item\n              itemType=\"button\"\n              horizontalAlignment=\"center\"\n              [buttonOptions]=\"registerButtonOptions\">\n\n            </dxi-item>-->\n          </dx-form>\n          <button class=\"btn btn-primary\" type=\"button\" (click)=\"createNewUser()\">Create user</button>\n    </div>\n  </div>\n</div>\n","export class NewUserDto{\n  public userName:string = \"admin@admin.com\";\n  public password:string = \"1234\";\n  public confirmPassword: string = \"1234\";\n}\n","import { Component, OnInit } from '@angular/core';\nimport { lastValueFrom, Observable } from 'rxjs';\nimport { UserManagmentService } from '../user-managment.service';\nimport { RoleDto } from './roleDto';\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.scss']\n})\nexport class RolesComponent implements OnInit {\n\n  protected cancellationObservable: Observable<void> = new Observable();\n  public roles:RoleDto[] = [];\n\n  constructor(private readonly service:UserManagmentService) { }\n\n  async ngOnInit() {\n    this.roles =  await lastValueFrom(this.service.getRolesList(this.cancellationObservable));\n  }\n\n  async saveRole(e:any, object:any){\n    console.log(e);\n    console.log(object);\n  }\n}\n","<div>\n  <dx-data-grid height=\"790px\" keyExpr=\"id\" id=\"usersList\" [dataSource]=\"roles\" [showBorders]=\"true\">\n    <dxo-load-panel [enabled]=\"true\"></dxo-load-panel>\n    <dxo-scrolling mode=\"virtual\"></dxo-scrolling>\n    <dxo-editing [allowAdding]=\"true\"></dxo-editing>\n    <dxo-search-panel [visible]=\"true\"></dxo-search-panel>\n    <dxo-toolbar>\n      <dxi-item name=\"addRowButton\" location=\"center\"></dxi-item>\n      <dxi-item\n        name=\"searchPanel\"\n        locateInMenu=\"auto\"\n        location=\"center\">\n      </dxi-item>\n    </dxo-toolbar>\n    <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\n  </dx-data-grid>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { lastValueFrom, Observable } from 'rxjs';\nimport { UserManagmentService } from '../user-managment.service';\nimport { UserDto } from './userDto';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n  protected cancellationObservable: Observable<void> = new Observable();\n\n  public users:UserDto[] = [];\n\n  constructor(private readonly service: UserManagmentService) {\n  }\n\n  async ngOnInit() {\n    this.users = await lastValueFrom(this.service.getUserList(this.cancellationObservable));\n    console.log(this.users);\n    //this.dataSource.items = () => this.users;\n    //this.dataSource.load();\n  }\n}\n","<div>\n  <dx-data-grid height=\"790px\" keyExpr=\"id\" id=\"usersList\" [dataSource]=\"users\" [showBorders]=\"true\">\n    <dxo-load-panel [enabled]=\"true\"></dxo-load-panel>\n    <dxo-scrolling mode=\"virtual\"></dxo-scrolling>\n    <dxo-editing [allowAdding]=\"true\"></dxo-editing>\n    <dxo-search-panel [visible]=\"true\"></dxo-search-panel>\n    <dxo-toolbar>\n      <dxi-item name=\"addRowButton\" location=\"center\"></dxi-item>\n      <dxi-item\n        name=\"searchPanel\"\n        locateInMenu=\"auto\"\n        location=\"center\">\n      </dxi-item>\n    </dxo-toolbar>\n    <dxi-column dataField=\"userName\" dataType=\"string\"></dxi-column>\n    <dxi-column dataField=\"email\" dataType=\"string\"></dxi-column>\n  </dx-data-grid>\n</div>\n","export enum UserManagmentApiRoutes {\n\tRoot = \"usermanagment\",\n\tCreateNewUser = \"createnewuser\",\n  UserList = \"userlist\",\n  RoleList = \"roleList\"\n}\n","export enum UserManagmentRoutes {\n\tRoot = \"user-managment\",\n\tCreateNewUser = \"new-user\",\n  UserList = \"user-list\"\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NewUserComponent } from './new-user/new-user.component';\nimport { RolesComponent } from './roles/roles.component';\nimport { UserListComponent } from './user-list/user-list.component';\n\nconst routes: Routes = [\n  {path: \"new-user\", component: NewUserComponent},\n  {path: \"user-list\", component: UserListComponent},\n  {path: \"roles\", component: RolesComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserManagmentRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserManagmentRoutingModule } from './user-managment-routing.module';\nimport { UserManagmentService } from './user-managment.service';\nimport { NewUserComponent } from './new-user/new-user.component';\nimport { DxFormModule, DxButtonModule, DxDataGridModule} from 'devextreme-angular';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { RolesComponent } from './roles/roles.component';\n\n\n@NgModule({\n  declarations: [\n    NewUserComponent,\n    UserListComponent,\n    RolesComponent\n  ],\n  imports: [\n    CommonModule,\n    UserManagmentRoutingModule,\n    DxFormModule,\n    DxButtonModule,\n    DxDataGridModule\n  ],\n  providers: [\n    UserManagmentService\n  ]\n})\nexport class UserManagmentModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { HttpApiService } from \"../common-services/http-api.service\";\nimport { BmsResponse } from \"../common-services/models/BmsResponse\";\nimport { NewUserDto } from \"./new-user/newUserDto\";\nimport { UserManagmentApiRoutes } from \"./user-managment-api-routes\";\nimport { UserDto } from \"./user-list/userDto\";\nimport { RoleDto } from \"./roles/roleDto\";\n\n@Injectable()\nexport class UserManagmentService {\n\tconstructor(public httpService: HttpApiService) {\n\t}\n\n\tpublic createNewUser(\n\t\trequest: NewUserDto,\n\t\tcancellationSubject: Observable<void>\n\t): Observable<BmsResponse> {\n\t\treturn this.httpService.post<BmsResponse>(\n\t\t\t`${UserManagmentApiRoutes.Root}/${UserManagmentApiRoutes.CreateNewUser}`,\n\t\t\trequest,\n\t\t\tcancellationSubject\n\t\t);\n\t}\n\n  public getUserList(\n    cancellationSubject:Observable<void>\n    ): Observable<UserDto[]> {\n    return this.httpService.get<UserDto[]>(\n      `${UserManagmentApiRoutes.Root}/${UserManagmentApiRoutes.UserList}`,\n      cancellationSubject\n    );\n  }\n\n  public getRolesList(\n    cancellationSubject:Observable<void>\n  ): Observable<RoleDto[]>{\n    return this.httpService.get<RoleDto[]>(\n      `${UserManagmentApiRoutes.Root}/${UserManagmentApiRoutes.RoleList}`,\n      cancellationSubject\n    )\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\tapiUrl: \"https://localhost:5001/api\",\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["lastValueFrom","Observable","AppRoutes","i0","AppComponent","constructor","service","events","router","cookie","jwtHelper","ngOnInit","LoginEmitter","subscribe","x","isUserLogin","LogoutEmitter","delete","get","isTokenExpired","onLogOut","logout","navigate","Root","selectors","decls","vars","consts","template","LoginDto","UserManagmentRoutes","LoginComponent","onLogin","result","login","model","cancellationObservable","UserList","emit","ctx","NewUserDto","NewUserComponent","text","type","useSubmitBehavior","newUser","password","createNewUser","b","RolesComponent","roles","getRolesList","saveRole","e","object","console","log","UserListComponent","users","getUserList"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}